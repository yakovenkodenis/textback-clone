import React, { Component } from 'react';
import { observer } from 'mobx-react';
import { withRouter } from 'react-router-dom';
import { TwitterPicker } from 'react-color';

import WidgetPreview from './WidgetPreview';
import ImagePicker from '../../UiHelpers/ImagePicker/ImagePicker';

import bellPng from '../../../images/bellLogo.png';
import msgPng from '../../../images/msgLogo.png';
import planePng from '../../../images/planeLogo.png';


/* const defaultSvgIcon =
`<svg id="widget-logo-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 636.1 140.4">
<style>{.st0{fill:#9a62f4}.st2{fill:#da8cff}}</style>
<path className="st0" d="M182 49.8c0-3.6-.6-6-1.8-7.3-1.2-1.3-2.8-1.9-4.8-1.9s-3.6.6-4.8 1.8c-1.2 1.2-1.8 3.2-1.8 6.1V55h-11.6v-6c0-6.5 1.5-11.5 4.6-14.9 3.1-3.4 7.7-5.1 13.9-5.1s10.9 1.7 14.1 5.2c3.2 3.5 4.8 8.5 4.8 15v2.1c0 8.6-2.9 14.1-8.8 16.5 3.2 1.4 5.5 3.5 6.8 6.4 1.3 2.9 2 6.4 2 10.5V91c0 6.5-1.6 11.5-4.8 15-3.2 3.5-7.9 5.2-14.1 5.2-6.2 0-10.9-1.7-14.1-5.2-3.2-3.5-4.8-8.5-4.8-15v-8.8h11.9v9.6c0 2.9.6 5 1.8 6.1 1.2 1.2 2.8 1.8 4.8 1.8s3.6-.6 4.8-1.8c1.2-1.2 1.8-3.6 1.8-7.2v-6.3c0-3.7-.7-6.4-1.9-7.9-1.3-1.5-3.4-2.3-6.3-2.3h-3.1V62.7h3.8c2.4 0 4.2-.6 5.6-1.8 1.3-1.2 2-3.4 2-6.7v-4.4zM243.9 110.3h-12.7L229 95.8h-15.5l-2.2 14.6h-11.6l12.8-80.3H231l12.9 80.2zm-28.7-25.4h12.2l-6.1-40.6-6.1 40.6zM262.4 110.3h-12.6V30.1h12.6v34.4h14.3V30.1h12.8v80.3h-12.8V75.9h-14.3v34.4zM298.9 110.3V30.1h33.3v11.5h-20.6v68.8h-12.7zM353.3 63.9h17.3v11.5h-17.3v23.5h21.8v11.5h-34.4V30.1h34.4v11.5h-21.8v22.3z"/><g><path className="st0" d="M422.9 31c6.3 0 11.1 1.7 14.2 5 3.1 3.4 4.6 8.3 4.6 14.8v10.4c0 6.5-1.5 11.4-4.6 14.8-3.1 3.4-7.8 5-14.2 5h-6v30.2h-12.6V31h18.6zm-6 11.4v27.2h6c2 0 3.5-.5 4.6-1.6 1.1-1.1 1.6-3.1 1.6-6V50c0-2.9-.5-4.9-1.6-6-1.1-1.1-2.6-1.6-4.6-1.6h-6zM488.4 111.3h-12.7l-2.2-14.6H458l-2.2 14.6h-11.6L457 31h18.5l12.9 80.3zm-28.8-25.5h12.2l-6.1-40.6-6.1 40.6zM506.8 111.3h-12.6V31h12.6v34.4h14.3V31H534v80.3h-12.8V76.9h-14.3v34.4zM543.3 111.3V31h33.3v11.5H556v68.8h-12.7zM597.7 64.8H615v11.5h-17.3v23.5h21.8v11.5H585V31h34.4v11.5h-21.8v22.3z"/></g><g><path fill="#9a55ff" d="M33.7 64.9l13 63.5L142.2 12z"/><path className="st2" d="M142.2 12L36.8 80.2 8.2 64.1zM142.2 12l-.2.4-55.2 95.4-35.5-19.4z"/></g>
</svg>`;
*/

const bellSvgIcon =
`<svg id="widget-logo-icon" width="300" height="300" viewBox="-20 0 512 512" style="display: block; margin: auto;" xmlns="http://www.w3.org/2000/svg">
<path d="M426.492 356.484H44.582c17.5 0 27.395-9.156 33.012-24.332 27.168-73.285-45.2-286.851 157.949-286.851 203.144 0 130.766 213.566 157.937 286.851 5.625 15.176 15.524 24.332 33.012 24.332zm0 0" fill="#f7d360"/>
<path d="M463.469 393.457c0 20.422-16.559 36.977-36.977 36.977H44.582c-10.21 0-19.457-4.137-26.148-10.829-6.692-6.69-10.829-15.937-10.829-26.148 0-20.418 16.555-36.973 36.977-36.973h381.91c10.211 0 19.457 4.137 26.149 10.829s10.828 15.937 10.828 26.144zm0 0" fill="#e58e13"/>
<path d="M393.48 332.152h-198.5c-21.398 0-38.511-17.714-37.847-39.105 2.797-90.5-11.637-246.027 76.922-247.738-243.094 1.257-87.7 311.175-189.47 311.175h381.907c-17.488 0-27.387-9.156-33.012-24.332zm0 0" fill="#e58e13"/>
<path d="M463.469 393.457c0 20.422-16.559 36.977-36.977 36.977H151.43c-10.207 0-19.453-4.137-26.145-10.829-6.691-6.69-10.828-15.937-10.828-26.148 0-20.418 16.555-36.973 36.973-36.973h275.062c10.211 0 19.457 4.137 26.149 10.829s10.828 15.937 10.828 26.144zm0 0" fill="#f7d360"/>
<path d="M309.492 430.434c0 34.004-22.945 62.636-54.18 71.285a74.039 74.039 0 0 1-19.769 2.676c-40.852 0-73.961-33.114-73.961-73.961zm0 0" fill="#e58e13"/>
<path d="M305.914 453.246c-7.613 23.5-26.676 41.852-50.601 48.473-15.043-4.16-28.16-12.953-37.723-24.746-7.707-9.508-.754-23.727 11.484-23.727zm0 0" fill="#f7d360"/>
<path d="M273.125 48.129c.082-.934.113-1.875.113-2.828 0-20.817-16.883-37.696-37.695-37.696-20.828 0-37.695 16.88-37.695 37.696 0 .953.027 1.894.109 2.828" fill="#e58e13"/>
<path d="M426.492 348.875h-.031c-14.723-.008-23.035-7.648-27.793-25.531-4.863-18.29-5.027-44.813-5.2-72.895-.206-34.023-.44-72.586-8.898-107.074a7.608 7.608 0 0 0-9.199-5.574c-4.074 1-6.57 5.117-5.574 9.195 8.035 32.75 8.262 70.363 8.465 103.547.18 29.078.343 56.543 5.707 76.707 2.332 8.77 5.676 15.977 9.996 21.625H77.109c4.32-5.648 7.664-12.855 9.996-21.625 5.364-20.164 5.532-47.629 5.707-76.707.27-44.395.579-94.711 18.743-133.219 20.445-43.347 61-64.422 123.984-64.422 34.59 0 62.895 6.5 84.125 19.325 18.41 11.117 31.926 26.918 41.32 48.304a7.602 7.602 0 0 0 10.02 3.903 7.605 7.605 0 0 0 3.906-10.02c-10.55-24.016-26.492-42.59-47.383-55.207-13.336-8.055-28.996-13.863-46.832-17.402C278.898 18.457 259.34 0 235.54 0c-23.8 0-43.363 18.46-45.148 41.813-17.016 3.37-32.059 8.804-44.97 16.285-20.773 12.039-36.796 29.785-47.624 52.738-19.594 41.543-19.914 93.644-20.192 139.613-.171 28.082-.332 54.606-5.199 72.895-4.758 17.883-13.07 25.523-27.793 25.531h-.031C20 348.875 0 368.875 0 393.461c0 24.582 20 44.582 44.582 44.582h48.129a7.603 7.603 0 1 0 0-15.207H44.582c-16.195 0-29.375-13.18-29.375-29.375s13.176-29.371 29.371-29.375H426.496c16.191.004 29.367 13.18 29.367 29.375s-13.18 29.375-29.375 29.375h-303.36c-4.198 0-7.6 3.402-7.6 7.601s3.402 7.606 7.6 7.606h31.216C158.19 479.465 193.129 512 235.539 512c42.406 0 77.344-32.535 81.191-73.957h109.762c24.582 0 44.582-20 44.582-44.582 0-24.586-20-44.586-44.582-44.586zM235.54 15.207c14.563 0 26.742 10.402 29.504 24.164-9.336-1.101-19.164-1.676-29.504-1.676s-20.168.57-29.5 1.672c2.762-13.762 14.938-24.16 29.5-24.16zm0 481.586c-34.016 0-62.121-25.734-65.906-58.75H301.44c-3.785 33.016-31.89 58.75-65.902 58.75zm0 0M357.633 47.723c.137.074 13.676 7.8 26.996 25.75 17.844 24.039 26.887 54.07 26.887 89.261 0 4.2 3.406 7.606 7.605 7.606 4.2 0 7.606-3.406 7.606-7.606 0-48.445-16.543-80.601-30.422-99.043-15.25-20.265-30.645-28.91-31.293-29.27-3.668-2.023-8.27-.694-10.309 2.962-2.039 3.66-.723 8.285 2.93 10.34zm0 0M415.004 50.512c1.223.8 29.969 20.093 29.969 68.633 0 4.199 3.406 7.601 7.605 7.601s7.602-3.402 7.602-7.601c0-57.25-35.465-80.48-36.977-81.442-3.527-2.246-8.191-1.207-10.457 2.313-2.266 3.515-1.246 8.21 2.258 10.496zm0 0M51.95 170.34c4.198 0 7.605-3.406 7.605-7.606 0-35.191 9.047-65.222 26.886-89.261 13.239-17.836 26.696-25.578 26.993-25.75a7.603 7.603 0 0 0-7.375-13.301c-.649.36-16.043 9.004-31.293 29.27-13.875 18.44-30.418 50.597-30.418 99.042 0 4.2 3.402 7.606 7.601 7.606zm0 0M18.496 126.746a7.6 7.6 0 0 0 7.602-7.601c0-48.5 28.703-67.805 29.968-68.63a7.606 7.606 0 0 0 2.301-10.476c-2.254-3.543-6.953-4.586-10.5-2.332-1.508.961-36.976 24.188-36.976 81.438 0 4.199 3.406 7.601 7.605 7.601zm0 0"/>
</svg>`;

const msgSvgIcon =
`<svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="-200 -150 900 900" style="display: block; margin: auto;">
<ellipse cx="256" cy="256" fill="#66d15f" rx="248.459" ry="248.5"/>
<path fill="#53bc77" d="M402.516 55.306c37.17 43.435 59.629 99.837 59.629 161.491 0 137.243-111.239 248.5-248.459 248.5-54.794 0-105.435-17.755-146.516-47.806C112.739 470.742 180.424 504.5 256 504.5c137.22 0 248.459-111.257 248.459-248.5 0-82.439-40.148-155.488-101.943-200.694z"/>
<path fill="#d4ffdf" d="M299.151 154.937h-86.302c-54.26 0-98.246 43.993-98.246 98.262 0 40.608 24.63 75.459 59.762 90.433 5.394 2.299 8.922 7.562 8.922 13.427v25.269c0 8.159 10.231 11.815 15.4 5.503l25.409-31.029a14.573 14.573 0 0 1 11.274-5.34h63.78c54.26 0 98.246-43.993 98.246-98.262.001-54.27-43.985-98.263-98.245-98.263z"/>
<path fill="#b1ffc5" d="M353.416 171.281c10.322 15.552 16.341 34.209 16.341 54.274 0 54.269-43.986 98.262-98.246 98.262H207.73c-4.368 0-8.506 1.96-11.274 5.34l-15.911 19.43a14.494 14.494 0 0 1 2.742 8.472v25.268c0 8.159 10.231 11.815 15.4 5.502l25.409-31.029a14.573 14.573 0 0 1 11.274-5.34h63.781c54.26 0 98.246-43.993 98.246-98.262 0-34.202-17.476-64.319-43.981-81.917z"/>
<g fill="#66d15f">
  <circle cx="198.609" cy="251.873" r="15.076"/>
  <circle cx="256" cy="251.873" r="15.076"/>
  <circle cx="313.391" cy="251.873" r="15.076"/>
</g>
<g>
  <path d="M448.249 86.984c-40.71-46.285-96.593-76.338-157.355-84.624-4.097-.561-7.885 2.314-8.444 6.418s2.313 7.885 6.418 8.444c57.188 7.799 109.791 36.092 148.118 79.668 38.674 43.972 59.973 100.478 59.973 159.11 0 64.374-25.064 124.894-70.576 170.413C380.873 471.932 320.362 497 256 497s-124.873-25.068-170.384-70.587C40.105 380.894 15.041 320.374 15.041 256S40.105 131.106 85.616 85.587C131.127 40.068 191.638 15 256 15a7.5 7.5 0 0 0 0-15C187.63 0 123.354 26.629 75.009 74.981 26.665 123.333.041 187.62.041 256s26.625 132.667 74.968 181.019C123.354 485.371 187.63 512 256 512s132.646-26.629 180.991-74.981C485.335 388.667 511.959 324.38 511.959 256c0-62.28-22.626-122.305-63.71-169.016z"/>
  <path d="M330.196 354.328c21.177-6.496 40.201-19.879 53.567-37.683 13.826-18.417 21.133-40.355 21.133-63.446 0-58.317-47.438-105.762-105.746-105.762h-86.303c-58.308 0-105.746 47.445-105.746 105.762a105.657 105.657 0 0 0 64.321 97.333c2.651 1.13 4.363 3.692 4.363 6.527v25.269c0 6.928 4.215 12.911 10.74 15.241 1.825.652 3.691.969 5.53.969 4.73 0 9.272-2.096 12.433-5.955l25.41-31.03a7.046 7.046 0 0 1 5.471-2.591h58.161a7.5 7.5 0 0 0 0-15h-58.161a21.991 21.991 0 0 0-17.077 8.088l-25.41 31.029c-.158.193-.529.644-1.312.365-.786-.281-.786-.866-.786-1.116v-25.269c0-8.857-5.292-16.835-13.481-20.326a90.677 90.677 0 0 1-55.203-83.534c0-50.046 40.708-90.762 90.746-90.762h86.303c50.037 0 90.746 40.716 90.746 90.762 0 19.817-6.269 38.642-18.129 54.44-11.477 15.287-27.802 26.775-45.97 32.348a7.5 7.5 0 1 0 4.4 14.341z"/>
  <path d="M176.033 251.873c0 12.45 10.127 22.579 22.576 22.579s22.577-10.129 22.577-22.579c0-12.45-10.128-22.579-22.577-22.579s-22.576 10.129-22.576 22.579zm30.153 0c0 4.179-3.399 7.579-7.577 7.579s-7.576-3.4-7.576-7.579 3.398-7.579 7.576-7.579 7.577 3.4 7.577 7.579zM233.424 251.873c0 12.45 10.127 22.579 22.576 22.579s22.576-10.129 22.576-22.579c0-12.45-10.127-22.579-22.576-22.579s-22.576 10.129-22.576 22.579zm30.152 0c0 4.179-3.398 7.579-7.576 7.579s-7.576-3.4-7.576-7.579 3.398-7.579 7.576-7.579 7.576 3.4 7.576 7.579zM335.967 251.873c0-12.45-10.127-22.579-22.576-22.579s-22.577 10.129-22.577 22.579c0 12.45 10.128 22.579 22.577 22.579s22.576-10.129 22.576-22.579zm-22.576 7.579c-4.178 0-7.577-3.4-7.577-7.579s3.399-7.579 7.577-7.579 7.576 3.4 7.576 7.579-3.398 7.579-7.576 7.579z"/>
</g>
</svg>`;

const planeSvgIcon =
`<svg xmlns="http://www.w3.org/2000/svg" width="150" height="150" viewBox="-80 -50 700 700" style="display: block; margin: auto;">
<path fill="#eb7a0c" d="M176.797 411.547l99.446-66.298"/>
<g fill="#a4c2f7">
  <path d="M210.371 302.432l-33.574 109.115 99.446-66.3z"/>
  <path d="M210.371 302.432l-33.037 109.115-25.717-142.689L495.748 92.596z"/>
  <path d="M487.705 107.971a8.075 8.075 0 0 1-7.293-4.098L210.371 302.432 378.24 411.547l112.037-304.098a8.844 8.844 0 0 1-2.572.522z"/>
</g>
<path fill="#e3e7f2" d="M445.387 126.17L210.371 302.432l151.082 92.328 100.721-276.984z"/>
<path fill="#fff" d="M468.41 98.245L8.394 193.317l143.222 75.541 323.041-165.461a8.1 8.1 0 0 1-6.247-5.152z"/>
<path fill="#e3e7f2" d="M445.387 117.776L34.109 210.104l117.508 58.754 300.017-145.93a8.1 8.1 0 0 1-6.247-5.152z"/>
<g fill="#428dff">
  <path d="M378.24 419.94a8.4 8.4 0 0 1-4.574-1.352L205.797 309.473a8.393 8.393 0 0 1-.402-13.803L406.78 147.596l-251.336 128.73a8.397 8.397 0 0 1-7.746-.041L4.477 200.743a8.396 8.396 0 0 1 2.221-15.647L493.895 84.407a8.403 8.403 0 0 1 8.779 3.451c.177.251.336.514.475.787a8.325 8.325 0 0 1 .951 4.771c-.04.435-.117.865-.23 1.287-.076.3-.169.596-.279.885l-117.474 318.86a8.382 8.382 0 0 1-7.877 5.492zM225.117 302.006l148.885 96.771 104.213-282.869-253.098 186.098zM32.994 196.8l118.68 62.598L436.83 113.342 32.994 196.8z"/>
  <path d="M176.805 419.94a8.395 8.395 0 0 1-4.664-15.377l99.443-66.295a8.394 8.394 0 1 1 9.312 13.967l-99.443 66.295a8.384 8.384 0 0 1-4.648 1.41z"/>
  <path d="M177.33 419.94c-.156 0-.32-.008-.484-.017a8.392 8.392 0 0 1-7.779-6.885l-25.713-142.689a8.391 8.391 0 0 1 4.435-8.959L491.92 85.128a8.394 8.394 0 0 1 8.803 14.229L217.592 307.538 185.363 413.98a8.388 8.388 0 0 1-8.033 5.96zm-16.353-146.451l18.426 102.246 22.935-75.737a8.382 8.382 0 0 1 3.057-4.328L406.78 147.596 160.977 273.489z"/>
  <path d="M176.797 419.94a8.395 8.395 0 0 1-8.025-10.861l33.574-109.115a8.395 8.395 0 0 1 12.599-4.574l65.869 42.82a8.397 8.397 0 0 1 .082 14.024l-99.443 66.295a8.355 8.355 0 0 1-4.656 1.411zm38.328-104.41l-23.377 75.959 69.229-46.147-45.852-29.812z"/>
</g>
</svg>`;

const logos = [
    // { value: 'default-icon', src: defaultSvgIcon },
    { value: 'bell-icon', src: bellSvgIcon, png: bellPng },
    { value: 'msg-icon', src: msgSvgIcon, png: msgPng },
    { value: 'plane-icon', src: planeSvgIcon, png: planePng }
];


@withRouter
@observer
export default class Appearance extends Component {

    state = {
        headerColor: '#ffffff',
        headerTextColor: '#888888',
        descriptionTextColor: '#888888',
        openAfterSeconds: 0,
        widgetDescription: '',
        widgetHeader: '',
        headerSVGicon: msgSvgIcon,
        isPreviewModalOpen: false
    }

    componentDidUpdate(prevProps, prevState) {
        if (this.props.saveWidget) {
            this.props.saveWidget({
                headerColor: this.state.headerColor,
                headerTextColor: this.state.headerTextColor,
                descriptionTextColor: this.state.descriptionTextColor,
                openAfterSeconds: this.state.openAfterSeconds,
                widgetDescription: this.state.widgetDescription,
                widgetHeader: this.state.widgetHeader,
                headerSVGicon: this.state.headerSVGicon
            });
        }
    }

    onColorChange = (color, element) => {
        this.setState({
            ...this.state,
            [element]: color.hex
        });
    }

    onOpenAfterSeconds = e => {
        console.log(e.target.value);
        this.setState({
            ...this.state,
            openAfterSeconds: e.target.value
        });
    }

    onValueChange = (e, name) => {
        this.setState({
            ...this.state,
            [name]: e.target.value
        });
    }

    openPreview = () => {
        this.setState({
            ...this.state,
            isPreviewModalOpen: true
        });
    }

    handleOpenPreview = () => {
        this.setState({
            ...this.state,
            isPreviewModalOpen: false
        });
    }

    onLogoPick = logo => {
        this.setState({
            ...this.state,
            headerSVGicon: logo.src
        });
    }

    render() {
        return (
            <React.Fragment>
                <div className="page-header">
                    <h3 className="page-title">Внешний вид виджета</h3>
                </div>

                <div className="row">
                    <div className="col-6">
                        <form className="pt-3">

                        <div className="form-group">
                            <label htmlFor="inputWidgetSVGHeader">Логотип</label>
                            <ImagePicker images={logos} multiple={false} onPick={this.onLogoPick} />
                        </div>

                            <div className="form-group">
                                <label htmlFor="inputWidgetHeader">Заголовок</label>
                                <input
                                    type="text"
                                    placeholder="Заголовок"
                                    className="form-control form-control-lg"
                                    id="inputWidgetHeader"
                                    value={this.state.widgetHeader}
                                    onChange={e => { this.onValueChange(e, 'widgetHeader'); }}
                                />
                            </div>
                            
                            <div className="form-group">
                                <label>Фоновый цвет заголовка</label>
                                <TwitterPicker
                                    triangle='hide'
                                    width='100%'
                                    colors={[
                                        '#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC',
                                        '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#FFFFFF',
                                        '#B66DFF'
                                    ]}
                                    color={this.state.headerColor}
                                    onChangeComplete={color => { this.onColorChange(color, 'headerColor'); }}
                                />
                            </div>
                            <div className="form-group">
                                <label>Цвет текста в заголовке</label>
                                <TwitterPicker
                                    triangle='hide'
                                    width='100%'
                                    colors={[
                                        '#FF6900', '#FCB900', '#333333', '#00D084', '#8ED1FC',
                                        '#0693E3', '#ABB8C3', '#EB144C', '#888888', '#FFFFFF',
                                        '#B66DFF'
                                    ]}
                                    color={this.state.headerTextColor}
                                    onChangeComplete={color => { this.onColorChange(color, 'headerTextColor'); }}
                                />
                            </div>
                            <div className="form-group">
                                <label htmlFor="inputWidgetDescription">Описание</label>
                                <textarea
                                    type="text"
                                    placeholder="Описание..."
                                    className="form-control form-control-lg"
                                    id="inputWidgetDescription"
                                    spellCheck={false}
                                    rows={4}
                                    value={this.state.widgetDescription}
                                    onChange={e => { this.onValueChange(e, 'widgetDescription'); }}
                                />
                            </div>
                            <div className="form-group">
                                <label>Цвет текста в описании</label>
                                <TwitterPicker
                                    triangle='hide'
                                    width='100%'
                                    colors={[
                                        '#FF6900', '#FCB900', '#333333', '#00D084', '#8ED1FC',
                                        '#0693E3', '#ABB8C3', '#EB144C', '#888888', '#FFFFFF',
                                        '#B66DFF'
                                    ]}
                                    color={this.state.descriptionTextColor}
                                    onChangeComplete={color => { this.onColorChange(color, 'descriptionTextColor'); }}
                                />
                            </div>

                            <div className="form-group">
                                <label htmlFor="inputWidgetOpenAfterMillis">Показывать через {parseInt(this.state.openAfterSeconds, 10) || 0} секунд</label>
                                <input
                                    type="number"
                                    placeholder="Показывать через..."
                                    className="form-control form-control-lg"
                                    id="inputWidgetOpenAfterMillis"
                                    min="0"
                                    step="1"
                                    value={this.state.openAfterSeconds}
                                    onInput={e => { this.onValueChange(e, 'openAfterSeconds'); }}
                                />
                            </div>
                        </form>
                    </div>

                    <div className="col-6">
                        <button
                            className="btn btn-light mb-3 d-flex mx-auto"
                            onClick={this.openPreview}
                        >
                            Предпросмотр
                        </button>
                        <br/>
                        <WidgetPreview
                            {...this.state}
                            links={this.props.links ? this.props.links : []}
                            openPreview={this.handleOpenPreview}
                        />
                    </div>
                </div>
            </React.Fragment>
        )
    }
}
